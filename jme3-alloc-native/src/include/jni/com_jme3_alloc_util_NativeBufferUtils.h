/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class com_jme3_alloc_util_NativeBufferUtils */

#ifndef _Included_com_jme3_alloc_util_NativeBufferUtils
#define _Included_com_jme3_alloc_util_NativeBufferUtils
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     com_jme3_alloc_util_NativeBufferUtils
 * Method:    phantomMemoryAlloc
 * Signature: (J)Ljava/nio/ByteBuffer;
 */
JNIEXPORT jobject JNICALL Java_com_jme3_alloc_util_NativeBufferUtils_phantomMemoryAlloc
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_jme3_alloc_util_NativeBufferUtils
 * Method:    phantomClearAlloc
 * Signature: (J)Ljava/nio/ByteBuffer;
 */
JNIEXPORT jobject JNICALL Java_com_jme3_alloc_util_NativeBufferUtils_phantomClearAlloc
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_jme3_alloc_util_NativeBufferUtils
 * Method:    memoryAlloc
 * Signature: (J)Ljava/nio/ByteBuffer;
 */
JNIEXPORT jobject JNICALL Java_com_jme3_alloc_util_NativeBufferUtils_memoryAlloc
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_jme3_alloc_util_NativeBufferUtils
 * Method:    clearAlloc
 * Signature: (J)Ljava/nio/ByteBuffer;
 */
JNIEXPORT jobject JNICALL Java_com_jme3_alloc_util_NativeBufferUtils_clearAlloc
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_jme3_alloc_util_NativeBufferUtils
 * Method:    memorySet
 * Signature: (Ljava/nio/ByteBuffer;IJ)Ljava/nio/ByteBuffer;
 */
JNIEXPORT jobject JNICALL Java_com_jme3_alloc_util_NativeBufferUtils_memorySet
  (JNIEnv *, jclass, jobject, jint, jlong);

/*
 * Class:     com_jme3_alloc_util_NativeBufferUtils
 * Method:    memoryMove
 * Signature: (Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;J)V
 */
JNIEXPORT void JNICALL Java_com_jme3_alloc_util_NativeBufferUtils_memoryMove
  (JNIEnv *, jclass, jobject, jobject, jlong);

/*
 * Class:     com_jme3_alloc_util_NativeBufferUtils
 * Method:    memoryCopy
 * Signature: (Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;J)V
 */
JNIEXPORT void JNICALL Java_com_jme3_alloc_util_NativeBufferUtils_memoryCopy
  (JNIEnv *, jclass, jobject, jobject, jlong);

/*
 * Class:     com_jme3_alloc_util_NativeBufferUtils
 * Method:    destroy
 * Signature: (Ljava/nio/Buffer;)V
 */
JNIEXPORT void JNICALL Java_com_jme3_alloc_util_NativeBufferUtils_destroy__Ljava_nio_Buffer_2
  (JNIEnv *, jclass, jobject);

/*
 * Class:     com_jme3_alloc_util_NativeBufferUtils
 * Method:    removeGlobalReference
 * Signature: (Ljava/nio/Buffer;)V
 */
JNIEXPORT void JNICALL Java_com_jme3_alloc_util_NativeBufferUtils_removeGlobalReference
  (JNIEnv *, jclass, jobject);

/*
 * Class:     com_jme3_alloc_util_NativeBufferUtils
 * Method:    destroy
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_com_jme3_alloc_util_NativeBufferUtils_destroy__J
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_jme3_alloc_util_NativeBufferUtils
 * Method:    getMemoryAddress
 * Signature: (Ljava/nio/Buffer;)J
 */
JNIEXPORT jlong JNICALL Java_com_jme3_alloc_util_NativeBufferUtils_getMemoryAddress
  (JNIEnv *, jclass, jobject);

#ifdef __cplusplus
}
#endif
#endif
